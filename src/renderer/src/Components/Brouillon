const TagFragment = () => {
  const [tags, setTags] = useState([])

  useEffect(() => {
    const getAllData = async () => {
      const list = await dbProvider.getAllData('tags')
      console.log('Data récupérée ')
      console.log(list)

      setTags(list) // On met à jour le state
    }

    getAllData()
  }, [])
  const addTagField = (e) => {
    e.preventDefault()
    setTags([...tags, ''])
  }

  const handleTagChange = (index, value) => {
    const newTags = [...tags]
    newTags[index] = value
    setTags(newTags)
  }

  const removeTagField = (index) => {
    const newTags = tags.filter((_, i) => i !== index)
    setTags(newTags.length > 0 ? newTags : [''])
  }
  const setData = async () => {}
  return (
    <>
      <div className="tags-container">
        <label>Tags:</label>
        {tags.map((tag, index) => (
          <div
            key={index}
            style={{
              display: 'flex',
              alignItems: 'center',
              marginBottom: '5px'
            }}
          >
            <input
              type="text"
              className="tag-input"
              value={tag}
              onChange={(e) => handleTagChange(index, e.target.value)}
            />
            <button
              className="remove-tag"
              onClick={(e) => {
                e.preventDefault()
                removeTagField(index)
              }}
            >
              -
            </button>
          </div>
        ))}
        <button className="add-tag" onClick={addTagField}>
          +
        </button>
      </div>
    </>
  )
}
export default TagFragment
